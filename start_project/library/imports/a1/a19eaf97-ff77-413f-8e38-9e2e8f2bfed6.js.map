{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,kBAAU,EAAC,CAAC;AACZ,oBAAY,EAAC,CAAC;AACd,oBAAY,EAAC,CAAC;AACd,aAAK,EAAC,CAAC;KACV;;AAED,iBAAa,EAAC,yBAAU;AACpB,YAAI,MAAM,GAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAChG,YAAI,QAAQ,GAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAClG,eAAO,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,CAAC;KAEzD;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,UAAU,GAAC,IAAI,CAAC,aAAa,EAAE,CAAC;AACrC,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC3C;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        jumpHeight:0,\r\n        jumpDuration:0,\r\n        maxMoveSpeed:0,\r\n        accel:0,\r\n    },\r\n    \r\n    setJumpAction:function(){\r\n        var jumpUp=cc.moveBy(this.jumpDuration,cc.p(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        var jumpDown=cc.moveBy(this.jumpDuration,cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        return cc.repeatForever(cc.sequence(jumpUp,jumpDown));\r\n        \r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.jumpAction=this.setJumpAction();\r\n        this.node.runAction(this.setJumpAction);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}